plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
//	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'jacoco'
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
}

group = 'com.bside'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

//ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
//	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'

    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2")
    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
// https://mvnrepository.com/artifact/com.cloudinary/cloudinary-http44
    implementation group: 'com.cloudinary', name: 'cloudinary-http44', version: '1.35.0'

    implementation 'io.hypersistence:tsid:1.1.0'

    // Bouncy Castle Provider → Argon2
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    // com.sun.xml.bind
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.1'
    implementation 'com.sun.xml.bind:jaxb-core:4.0.1'
    // javax.xml.bind
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
    implementation group: 'commons-io', name: 'commons-io', version: '2.4'

//	if (profile == "localh2") {
//		runtimeOnly 'com.h2database:h2'
//	}else {
//		runtimeOnly 'com.mysql:mysql-connector-j'
//	}
    runtimeOnly 'com.mysql:mysql-connector-j'

    annotationProcessor 'org.projectlombok:lombok'

    // spring boot 3.0 query dsl setting.
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // p6spy : sql 로그 남기기(바인딩된 파라미터 간편 확인.)
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacoco.exec")
    }
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacoco {
    // JaCoCo 버전
    toolVersion = '0.8.8'
}

jacocoTestReport {
    dependsOn test
    reports {
        html.required.set(true)
        xml.required.set(false)
        csv.required.set(false)

        html.destination file("$buildDir/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }
            excludes = [
                    '**.*Dto.*',
                    '**.Application.*'
            ]
        }
    }
}

//def querydslDir = "$buildDir/generated/querydsl"
//
//querydsl {
//	jpa = true
//	querydslSourcesDir = querydslDir
//}
//sourceSets {
//	main.java.srcDir querydslDir
//}
//configurations {
//	querydsl.extendsFrom compileClasspath
//}
//compileQuerydsl {
//	options.annotationProcessorPath = configurations.querydsl
//}
jar {
    enabled = false
//    archiveClassifier = '' // Classifier 제거
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}